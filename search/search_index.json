{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Hello, world!","title":"Home"},{"location":"#hello-world","text":"","title":"Hello, world!"},{"location":"actions/GitHub%20Actions%20condition/","text":"actions Check commit message Using if statement name : \"Build\" on : push : branches : - main paths-ignore : - '**/*.md' - '**/*.gitignore' - '**/*.gitattributes' workflow_dispatch : branches : - main paths-ignore : - '**/*.md' - '**/*.gitignore' - '**/*.gitattributes' jobs : build : if : github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false name : Build runs-on : ubuntu-latest env : DOTNET_CLI_TELEMETRY_OPTOUT : 1 DOTNET_SKIP_FIRST_TIME_EXPERIENCE : 1 DOTNET_NOLOGO : true DOTNET_GENERATE_ASPNET_CERTIFICATE : false DOTNET_ADD_GLOBAL_TOOLS_TO_PATH : false DOTNET_MULTILEVEL_LOOKUP : 0 steps : - uses : actions/checkout@v2 - name : Setup .NET Core SDK uses : actions/setup-dotnet@v1 with : dotnet-version : 3.1.x - name : Restore run : dotnet restore - name : Build run : dotnet build --configuration Release --no-restore - name : Test run : dotnet test","title":"GitHub Actions condition"},{"location":"actions/GitHub%20Actions%20condition/#actions","text":"","title":"actions"},{"location":"actions/GitHub%20Actions%20condition/#check-commit-message","text":"Using if statement name : \"Build\" on : push : branches : - main paths-ignore : - '**/*.md' - '**/*.gitignore' - '**/*.gitattributes' workflow_dispatch : branches : - main paths-ignore : - '**/*.md' - '**/*.gitignore' - '**/*.gitattributes' jobs : build : if : github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false name : Build runs-on : ubuntu-latest env : DOTNET_CLI_TELEMETRY_OPTOUT : 1 DOTNET_SKIP_FIRST_TIME_EXPERIENCE : 1 DOTNET_NOLOGO : true DOTNET_GENERATE_ASPNET_CERTIFICATE : false DOTNET_ADD_GLOBAL_TOOLS_TO_PATH : false DOTNET_MULTILEVEL_LOOKUP : 0 steps : - uses : actions/checkout@v2 - name : Setup .NET Core SDK uses : actions/setup-dotnet@v1 with : dotnet-version : 3.1.x - name : Restore run : dotnet restore - name : Build run : dotnet build --configuration Release --no-restore - name : Test run : dotnet test","title":"Check commit message"},{"location":"actions/GitHub%20Actions%20local%20run/","text":"actions Installation How to prevent caching of my Javascript file? - Stack Overflow brew install act List job act -l Execute job act -j job-name Skip job - name : Some step if : ${{ !env.ACT }} run : |","title":"GitHub Actions local run"},{"location":"actions/GitHub%20Actions%20local%20run/#actions","text":"","title":"actions"},{"location":"actions/GitHub%20Actions%20local%20run/#installation","text":"How to prevent caching of my Javascript file? - Stack Overflow brew install act","title":"Installation"},{"location":"actions/GitHub%20Actions%20local%20run/#list-job","text":"act -l","title":"List job"},{"location":"actions/GitHub%20Actions%20local%20run/#execute-job","text":"act -j job-name","title":"Execute job"},{"location":"actions/GitHub%20Actions%20local%20run/#skip-job","text":"- name : Some step if : ${{ !env.ACT }} run : |","title":"Skip job"},{"location":"alfresco/Alfresco%20not%20return%20mimeTypeName/","text":"Upload .7z file POST https://xyz.com/alfresco/api/-default-/public/alfresco/versions/1/nodes/-root-/children Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW Authorization: Basic admin admin ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\"ERC:DocType\" Hello, world ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\"relativePath\" x/y/z ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\"autoRename\" false ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\"fileData\"; filename=\"XYZ.7z\" Content-Type: application/x-7z-compressed < resource/Interactive_travel_sample.7z ------WebKitFormBoundary7MA4YWxkTrZu0gW-- Alfresco not include mimeTypeName in reponse body, here are diffrence between .md and .7z Markdown HTTP/ 1.1 201 Crea te d Server : n gi n x Da te : Wed , 27 Ja n 2021 08 : 42 : 11 GMT Co ntent - Type : applica t io n /jso n ;charse t =UTF -8 Tra nsfer -E n codi n g : chu n ked Co nne c t io n : close Cache - Co ntr ol : n o - cache Expires : Thu , 01 Ja n 1970 00 : 00 : 00 GMT Pragma : n o - cache { \"entry\" : { \"isFile\" : true , \"createdByUser\" : { \"id\" : \"admin\" , \"displayName\" : \"Administrator\" }, \"modifiedAt\" : \"2021-01-27T08:42:09.904+0000\" , \"nodeType\" : \"cm:content\" , \"content\" : { \"mimeType\" : \"text/x-markdown\" , \"mimeTypeName\" : \"Markdown\" , \"sizeInBytes\" : 239 , \"encoding\" : \"UTF-8\" }, \"parentId\" : \"272fa3c7-e5cd-4748-963e-197a1c7b1be6\" , \"aspectNames\" : [ \"cm:versionable\" , \"cm:auditable\" , \"ERC:DocType\" ], \"createdAt\" : \"2021-01-27T08:42:06.000+0000\" , \"isFolder\" : false , \"modifiedByUser\" : { \"id\" : \"admin\" , \"displayName\" : \"Administrator\" }, \"name\" : \"CMD.md\" , \"id\" : \"3b32c88f-870a-4d5d-9330-e19f4f60b740\" , \"properties\" : { \"cm:versionLabel\" : \"1.0\" , \"ERC:DocType\" : \"Hello, world\" , \"cm:versionType\" : \"MAJOR\" } } } 7z HTTP/ 1.1 201 Crea te d Server : n gi n x Da te : Wed , 27 Ja n 2021 08 : 50 : 38 GMT Co ntent - Type : applica t io n /jso n ;charse t =UTF -8 Tra nsfer -E n codi n g : chu n ked Co nne c t io n : close Cache - Co ntr ol : n o - cache Expires : Thu , 01 Ja n 1970 00 : 00 : 00 GMT Pragma : n o - cache { \"entry\" : { \"isFile\" : true , \"createdByUser\" : { \"id\" : \"admin\" , \"displayName\" : \"Administrator\" }, \"modifiedAt\" : \"2021-01-27T08:50:37.217+0000\" , \"nodeType\" : \"cm:content\" , \"content\" : { \"mimeType\" : \"application/x-7z-compressed\" , \"sizeInBytes\" : 1209149 , \"encoding\" : \"UTF-8\" }, \"parentId\" : \"272fa3c7-e5cd-4748-963e-197a1c7b1be6\" , \"aspectNames\" : [ \"cm:versionable\" , \"cm:auditable\" , \"ERC:DocType\" ], \"createdAt\" : \"2021-01-27T08:50:37.217+0000\" , \"isFolder\" : false , \"modifiedByUser\" : { \"id\" : \"admin\" , \"displayName\" : \"Administrator\" }, \"name\" : \"XYZ.7z\" , \"id\" : \"5616b0ea-8d46-42e7-b967-67df4cea04e7\" , \"properties\" : { \"cm:versionLabel\" : \"1.0\" , \"ERC:DocType\" : \"Hello, world\" , \"cm:versionType\" : \"MAJOR\" } } }","title":"Alfresco not return mimeTypeName"},{"location":"alfresco/Alfresco%20not%20return%20mimeTypeName/#upload-7z-file","text":"POST https://xyz.com/alfresco/api/-default-/public/alfresco/versions/1/nodes/-root-/children Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW Authorization: Basic admin admin ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\"ERC:DocType\" Hello, world ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\"relativePath\" x/y/z ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\"autoRename\" false ------WebKitFormBoundary7MA4YWxkTrZu0gW Content-Disposition: form-data; name=\"fileData\"; filename=\"XYZ.7z\" Content-Type: application/x-7z-compressed < resource/Interactive_travel_sample.7z ------WebKitFormBoundary7MA4YWxkTrZu0gW-- Alfresco not include mimeTypeName in reponse body, here are diffrence between .md and .7z","title":"Upload .7z file"},{"location":"alfresco/Alfresco%20not%20return%20mimeTypeName/#markdown","text":"HTTP/ 1.1 201 Crea te d Server : n gi n x Da te : Wed , 27 Ja n 2021 08 : 42 : 11 GMT Co ntent - Type : applica t io n /jso n ;charse t =UTF -8 Tra nsfer -E n codi n g : chu n ked Co nne c t io n : close Cache - Co ntr ol : n o - cache Expires : Thu , 01 Ja n 1970 00 : 00 : 00 GMT Pragma : n o - cache { \"entry\" : { \"isFile\" : true , \"createdByUser\" : { \"id\" : \"admin\" , \"displayName\" : \"Administrator\" }, \"modifiedAt\" : \"2021-01-27T08:42:09.904+0000\" , \"nodeType\" : \"cm:content\" , \"content\" : { \"mimeType\" : \"text/x-markdown\" , \"mimeTypeName\" : \"Markdown\" , \"sizeInBytes\" : 239 , \"encoding\" : \"UTF-8\" }, \"parentId\" : \"272fa3c7-e5cd-4748-963e-197a1c7b1be6\" , \"aspectNames\" : [ \"cm:versionable\" , \"cm:auditable\" , \"ERC:DocType\" ], \"createdAt\" : \"2021-01-27T08:42:06.000+0000\" , \"isFolder\" : false , \"modifiedByUser\" : { \"id\" : \"admin\" , \"displayName\" : \"Administrator\" }, \"name\" : \"CMD.md\" , \"id\" : \"3b32c88f-870a-4d5d-9330-e19f4f60b740\" , \"properties\" : { \"cm:versionLabel\" : \"1.0\" , \"ERC:DocType\" : \"Hello, world\" , \"cm:versionType\" : \"MAJOR\" } } }","title":"Markdown"},{"location":"alfresco/Alfresco%20not%20return%20mimeTypeName/#7z","text":"HTTP/ 1.1 201 Crea te d Server : n gi n x Da te : Wed , 27 Ja n 2021 08 : 50 : 38 GMT Co ntent - Type : applica t io n /jso n ;charse t =UTF -8 Tra nsfer -E n codi n g : chu n ked Co nne c t io n : close Cache - Co ntr ol : n o - cache Expires : Thu , 01 Ja n 1970 00 : 00 : 00 GMT Pragma : n o - cache { \"entry\" : { \"isFile\" : true , \"createdByUser\" : { \"id\" : \"admin\" , \"displayName\" : \"Administrator\" }, \"modifiedAt\" : \"2021-01-27T08:50:37.217+0000\" , \"nodeType\" : \"cm:content\" , \"content\" : { \"mimeType\" : \"application/x-7z-compressed\" , \"sizeInBytes\" : 1209149 , \"encoding\" : \"UTF-8\" }, \"parentId\" : \"272fa3c7-e5cd-4748-963e-197a1c7b1be6\" , \"aspectNames\" : [ \"cm:versionable\" , \"cm:auditable\" , \"ERC:DocType\" ], \"createdAt\" : \"2021-01-27T08:50:37.217+0000\" , \"isFolder\" : false , \"modifiedByUser\" : { \"id\" : \"admin\" , \"displayName\" : \"Administrator\" }, \"name\" : \"XYZ.7z\" , \"id\" : \"5616b0ea-8d46-42e7-b967-67df4cea04e7\" , \"properties\" : { \"cm:versionLabel\" : \"1.0\" , \"ERC:DocType\" : \"Hello, world\" , \"cm:versionType\" : \"MAJOR\" } } }","title":"7z"},{"location":"alfresco/Login%20alfresco/","text":"Login http http://host/alfresco/service/api/login?u = user & pw = password","title":"Login alfresco"},{"location":"alfresco/Login%20alfresco/#login","text":"http http://host/alfresco/service/api/login?u = user & pw = password","title":"Login"},{"location":"bash/Count%20files%20in%20folder/","text":"Count find . -type f | wc -l","title":"Count files in folder"},{"location":"bash/Count%20files%20in%20folder/#count","text":"find . -type f | wc -l","title":"Count"},{"location":"bash/Count%20number%20of%20bytes/","text":"Number of bytes echo -n \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 | wc -c printf \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 | wc -c Number of characters echo -n \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 | wc -m printf \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 | wc -c echo -n Disable newline","title":"Count number of bytes"},{"location":"bash/Count%20number%20of%20bytes/#number-of-bytes","text":"echo -n \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 | wc -c printf \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 | wc -c","title":"Number of bytes"},{"location":"bash/Count%20number%20of%20bytes/#number-of-characters","text":"echo -n \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 | wc -m printf \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 | wc -c echo -n Disable newline","title":"Number of characters"},{"location":"bash/File%20name%20length/","text":"macOS #sftp macOS 255 \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23 (\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48 bytes) Windows 255 \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23 SFTP (Linux) \u0e0a\u0e37\u0e48\u0e2d\u0e44\u0e1f\u0e25\u0e4c\u0e15\u0e49\u0e2d\u0e07\u0e44\u0e21\u0e48\u0e40\u0e01\u0e34\u0e19 255 bytes \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 char * 3 (UTF-8)","title":"File name length"},{"location":"bash/File%20name%20length/#macos-sftp","text":"","title":"macOS #sftp"},{"location":"bash/File%20name%20length/#macos","text":"255 \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23 (\u0e44\u0e21\u0e48\u0e43\u0e0a\u0e48 bytes)","title":"macOS"},{"location":"bash/File%20name%20length/#windows","text":"255 \u0e15\u0e31\u0e27\u0e2d\u0e31\u0e01\u0e29\u0e23","title":"Windows"},{"location":"bash/File%20name%20length/#sftp-linux","text":"\u0e0a\u0e37\u0e48\u0e2d\u0e44\u0e1f\u0e25\u0e4c\u0e15\u0e49\u0e2d\u0e07\u0e44\u0e21\u0e48\u0e40\u0e01\u0e34\u0e19 255 bytes \u0e20\u0e32\u0e29\u0e32\u0e44\u0e17\u0e22 char * 3 (UTF-8)","title":"SFTP (Linux)"},{"location":"bash/Grep/","text":"Filter \u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01 grep -v \"unwanted\" \u0e25\u0e1a character \u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23 echo \"hello world\" | tr -d \"o\"","title":"Grep"},{"location":"bash/Grep/#filter","text":"grep -v \"unwanted\"","title":"Filter \u0e1a\u0e23\u0e23\u0e17\u0e31\u0e14\u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23\u0e2d\u0e2d\u0e01"},{"location":"bash/Grep/#character","text":"echo \"hello world\" | tr -d \"o\"","title":"\u0e25\u0e1a character \u0e17\u0e35\u0e48\u0e44\u0e21\u0e48\u0e15\u0e49\u0e2d\u0e07\u0e01\u0e32\u0e23"},{"location":"bash/Query%20array%20elelment%20with%20jq/","text":"json #jq \u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e20\u0e32\u0e22\u0e43\u0e19 Json Array \u0e14\u0e49\u0e27\u0e22 jq \u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 Input { \"data\" : [ { \"content\" : [ { \"id\" : 719114 } ], \"field\" : { \"id\" : \"stationLayout\" , \"name\" : \"\u0e1c\u0e31\u0e07\u0e1a\u0e23\u0e34\u0e40\u0e27\u0e13\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 (\u0e23\u0e30\u0e1a\u0e38\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e23\u0e49\u0e32\u0e19)\" } }, { \"content\" : [ { \"id\" : 719118 } ], \"field\" : { \"id\" : \"gd2PDF\" , \"name\" : \"\u0e2d\u0e31\u0e1b\u0e42\u0e2b\u0e25\u0e14\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23\u0e2a\u0e31\u0e0d\u0e0d\u0e32\u0e40\u0e0a\u0e48\u0e32\u0e1e\u0e37\u0e49\u0e19\u0e17\u0e35\u0e48\u0e41\u0e25\u0e30\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e43\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 (PDF)\" } } ] } \u0e14\u0e36\u0e07\u0e40\u0e09\u0e1e\u0e32\u0e30 id \u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49 data.content cat src/jq-array-element/input.json \\ | jq \".data | .[] | .content | .[] | .id\" Output 719114 719118","title":"Query array elelment with jq"},{"location":"bash/Query%20array%20elelment%20with%20jq/#json-jq","text":"","title":"json #jq"},{"location":"bash/Query%20array%20elelment%20with%20jq/#json-array-jq","text":"\u0e15\u0e31\u0e27\u0e2d\u0e22\u0e48\u0e32\u0e07 Input { \"data\" : [ { \"content\" : [ { \"id\" : 719114 } ], \"field\" : { \"id\" : \"stationLayout\" , \"name\" : \"\u0e1c\u0e31\u0e07\u0e1a\u0e23\u0e34\u0e40\u0e27\u0e13\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 (\u0e23\u0e30\u0e1a\u0e38\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e23\u0e49\u0e32\u0e19)\" } }, { \"content\" : [ { \"id\" : 719118 } ], \"field\" : { \"id\" : \"gd2PDF\" , \"name\" : \"\u0e2d\u0e31\u0e1b\u0e42\u0e2b\u0e25\u0e14\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23\u0e2a\u0e31\u0e0d\u0e0d\u0e32\u0e40\u0e0a\u0e48\u0e32\u0e1e\u0e37\u0e49\u0e19\u0e17\u0e35\u0e48\u0e41\u0e25\u0e30\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e43\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 (PDF)\" } } ] } \u0e14\u0e36\u0e07\u0e40\u0e09\u0e1e\u0e32\u0e30 id \u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e20\u0e32\u0e22\u0e43\u0e15\u0e49 data.content cat src/jq-array-element/input.json \\ | jq \".data | .[] | .content | .[] | .id\" Output 719114 719118","title":"\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e17\u0e35\u0e48\u0e2d\u0e22\u0e39\u0e48\u0e20\u0e32\u0e22\u0e43\u0e19 Json Array \u0e14\u0e49\u0e27\u0e22 jq"},{"location":"bash/SFTP%20upload/","text":"sftp Login sftp demo@localhost Upload put README.md","title":"SFTP upload"},{"location":"bash/SFTP%20upload/#sftp","text":"","title":"sftp"},{"location":"bash/SFTP%20upload/#login","text":"sftp demo@localhost","title":"Login"},{"location":"bash/SFTP%20upload/#upload","text":"put README.md","title":"Upload"},{"location":"bash/Windows%20package%20manage/","text":"winget search git winget install Git.Git","title":"Windows package manage"},{"location":"bash/Wireshark%20filtering/","text":"Filter ip.addr == 192.168.0.1 && http Tcp tcpdump -i enp0s8 -s 0 -A 'tcp dst port 80 and tcp\\[((tcp\\[12:1\\] & 0xf0) >> 2):4\\] = 0x504F5354'","title":"Wireshark filtering"},{"location":"bash/Wireshark%20filtering/#filter","text":"ip.addr == 192.168.0.1 && http","title":"Filter"},{"location":"bash/Wireshark%20filtering/#tcp","text":"tcpdump -i enp0s8 -s 0 -A 'tcp dst port 80 and tcp\\[((tcp\\[12:1\\] & 0xf0) >> 2):4\\] = 0x504F5354'","title":"Tcp"},{"location":"database/MySQL/","text":"Show list of process show processlist ;","title":"MySQL"},{"location":"database/MySQL/#show-list-of-process","text":"show processlist ;","title":"Show list of process"},{"location":"database/Query/","text":"View stat select * from pg_stat_activity where state = 'active' SELECT * FROM pg_stat_database ; View locks select relname as relation_name , query , pg_locks . * from pg_locks join pg_class on pg_locks . relation = pg_class . oid join pg_stat_activity on pg_locks . pid = pg_stat_activity . pid Show all index SELECT tablename , indexname , indexdef FROM pg_indexes WHERE schemaname = 'public' ORDER BY tablename , indexname ;","title":"Query"},{"location":"database/Query/#view-stat","text":"select * from pg_stat_activity where state = 'active' SELECT * FROM pg_stat_database ;","title":"View stat"},{"location":"database/Query/#view-locks","text":"select relname as relation_name , query , pg_locks . * from pg_locks join pg_class on pg_locks . relation = pg_class . oid join pg_stat_activity on pg_locks . pid = pg_stat_activity . pid","title":"View locks"},{"location":"database/Query/#show-all-index","text":"SELECT tablename , indexname , indexdef FROM pg_indexes WHERE schemaname = 'public' ORDER BY tablename , indexname ;","title":"Show all index"},{"location":"database/Scaffold/","text":"Create main project $ dotnet new webapi --output src/MyApp $ dotnet add src/MyWeb package Microsoft.EntityFrameworkCore.Design $ dotnet add src/MyWeb pacakge Microsoft.EntityFrameworkCore $ dotnet add src/MyWeb package Pomelo.EntityFrameworkCore.MySql Setup user secret $ dotnet user-secrets init --project src/MyWeb $ dotnet user-secrets list --project src/MyWeb $ cat ./secrets.json | dotnet user-secrets set --project src/MyWeb Generate models from DB $ dotnet ef dbcontext scaffold Name = ConectionStrings \\ Pomelo.EntityFrameworkCore.MySql \\ -o Models \\ -f \\ -c MyDbContext \\ -p src/MyWeb","title":"Scaffold"},{"location":"database/Scaffold/#create-main-project","text":"$ dotnet new webapi --output src/MyApp $ dotnet add src/MyWeb package Microsoft.EntityFrameworkCore.Design $ dotnet add src/MyWeb pacakge Microsoft.EntityFrameworkCore $ dotnet add src/MyWeb package Pomelo.EntityFrameworkCore.MySql","title":"Create main project"},{"location":"database/Scaffold/#setup-user-secret","text":"$ dotnet user-secrets init --project src/MyWeb $ dotnet user-secrets list --project src/MyWeb $ cat ./secrets.json | dotnet user-secrets set --project src/MyWeb","title":"Setup user secret"},{"location":"database/Scaffold/#generate-models-from-db","text":"$ dotnet ef dbcontext scaffold Name = ConectionStrings \\ Pomelo.EntityFrameworkCore.MySql \\ -o Models \\ -f \\ -c MyDbContext \\ -p src/MyWeb","title":"Generate models from DB"},{"location":"dotnet/Benchmark.NET%20simple%20setup/","text":"dotnet #performance Install package dotnet add pacakge BenchmarkDotNet Benchmark using BenchmarkDotNet.Attributes ; using BenchmarkDotNet.Running ; namespace Perf.FastLoop { [MemoryDiagnoser] public class T { private readonly int [] array = new int [ 1000 ]; private readonly int x = 1 ; [Benchmark] public void SlowLoop () { var a = array ; for ( int i = 0 ; i < 1000 ; i ++) a [ i ] += i + x ; } [Benchmark] public void FastLoop () { var a = array ; for ( int i = 0 ; i < 1000 ; i ++) a [ i ] = a [ i ] + i + x ; } } } BenchmarkRunner . Run < Perf . FastLoop . T >(); Run dotnet run --configuration Release --framework net5.0","title":"Benchmark.NET simple setup"},{"location":"dotnet/Benchmark.NET%20simple%20setup/#dotnet-performance","text":"","title":"dotnet #performance"},{"location":"dotnet/Benchmark.NET%20simple%20setup/#install-package","text":"dotnet add pacakge BenchmarkDotNet","title":"Install package"},{"location":"dotnet/Benchmark.NET%20simple%20setup/#benchmark","text":"using BenchmarkDotNet.Attributes ; using BenchmarkDotNet.Running ; namespace Perf.FastLoop { [MemoryDiagnoser] public class T { private readonly int [] array = new int [ 1000 ]; private readonly int x = 1 ; [Benchmark] public void SlowLoop () { var a = array ; for ( int i = 0 ; i < 1000 ; i ++) a [ i ] += i + x ; } [Benchmark] public void FastLoop () { var a = array ; for ( int i = 0 ; i < 1000 ; i ++) a [ i ] = a [ i ] + i + x ; } } } BenchmarkRunner . Run < Perf . FastLoop . T >(); Run dotnet run --configuration Release --framework net5.0","title":"Benchmark"},{"location":"dotnet/Build%20all%20project%20in%20directory/","text":"bash #dotnet Find and build find . -name \"*.csproj\" | xargs -n1 dotnet build find . -name \"*.csproj\" | xargs -n1 dotnet clean","title":"Build all project in directory"},{"location":"dotnet/Build%20all%20project%20in%20directory/#bash-dotnet","text":"","title":"bash #dotnet"},{"location":"dotnet/Build%20all%20project%20in%20directory/#find-and-build","text":"find . -name \"*.csproj\" | xargs -n1 dotnet build find . -name \"*.csproj\" | xargs -n1 dotnet clean","title":"Find and build"},{"location":"dotnet/Check%20collection/","text":"Check empty if ( enumerable ?. Any () == true ) { } if ( list ?. Count > 0 ) { }","title":"Check collection"},{"location":"dotnet/Check%20collection/#check-empty","text":"if ( enumerable ?. Any () == true ) { } if ( list ?. Count > 0 ) { }","title":"Check empty"},{"location":"dotnet/Convert%20date%20time%20to%20ISO-8601/","text":"csharp Convert DateTime to ISO 8601 var date = DateTime . Now ; Console . WriteLine ( date . ToString ( \"o\" )); Console . WriteLine ( date . ToUniversalTime (). ToString ( \"o\" )) Output 2021 -01-21T15:50:49.9400000+07:00 2021 -01-21T08:50:49.9400000Z","title":"Convert date time to ISO 8601"},{"location":"dotnet/Convert%20date%20time%20to%20ISO-8601/#csharp","text":"","title":"csharp"},{"location":"dotnet/Convert%20date%20time%20to%20ISO-8601/#convert-datetime-to-iso-8601","text":"var date = DateTime . Now ; Console . WriteLine ( date . ToString ( \"o\" )); Console . WriteLine ( date . ToUniversalTime (). ToString ( \"o\" )) Output 2021 -01-21T15:50:49.9400000+07:00 2021 -01-21T08:50:49.9400000Z","title":"Convert DateTime to ISO 8601"},{"location":"dotnet/Data%20frame/","text":"Data frame Install dotnet intall Microsoft.Data.Analysis Usage using Microsoft.Data.Analysis ; var frame = DataFrame . LoadCsv ( \"input.csv\" , ',' , header : true ); Issue Not support quoted string contains ,","title":"Data frame"},{"location":"dotnet/Data%20frame/#data-frame","text":"Install dotnet intall Microsoft.Data.Analysis Usage using Microsoft.Data.Analysis ; var frame = DataFrame . LoadCsv ( \"input.csv\" , ',' , header : true ); Issue Not support quoted string contains ,","title":"Data frame"},{"location":"dotnet/Database%20migration/","text":"Statup using System ; using Microsoft.AspNetCore.Builder ; using Microsoft.AspNetCore.Hosting ; using Microsoft.EntityFrameworkCore ; using Microsoft.Extensions.Configuration ; using Microsoft.Extensions.DependencyInjection ; using Microsoft.Extensions.Hosting ; namespace Mg { public class Startup { public Startup ( IConfiguration configuration ) { Configuration = configuration ; } public IConfiguration Configuration { get ; } public void ConfigureServices ( IServiceCollection services ) { const string cc = \"\" ; services . AddDbContext < KpiEntity . KpiContext >( options => { options . UseNpgsql ( cc , v => { v . MigrationsAssembly ( \"KpiMigration\" ); // v.SetPostgresVersion(9, 4); }); }); services . AddControllers (); } public void Configure ( IApplicationBuilder app , IWebHostEnvironment env ) { if ( env . IsDevelopment ()) { app . UseDeveloperExceptionPage (); } app . UseHttpsRedirection (); app . UseRouting (); app . UseAuthorization (); app . UseStaticFiles (); app . UseEndpoints ( endpoints => endpoints . MapControllers ()); } } class Program { public static void Main ( string [] args ) => CreateHostBuilder ( args ). Build (). Run (); public static IHostBuilder CreateHostBuilder ( string [] args ) => Host . CreateDefaultBuilder ( args ) . ConfigureWebHostDefaults ( webBuilder => webBuilder . UseStartup < Startup >()); } } Addition package <ItemGroup> <PackageReference Include= \"Microsoft.EntityFrameworkCore.Design\" Version= \"5.0.2\" > <IncludeAssets> runtime; build; native; contentfiles; analyzers; buildtransitive </IncludeAssets> <PrivateAssets> all </PrivateAssets> </PackageReference> <PackageReference Include= \"Microsoft.Extensions.DependencyInjection\" Version= \"5.0.1\" /> <PackageReference Include= \"Npgsql.EntityFrameworkCore.PostgreSQL\" Version= \"5.0.2\" /> </ItemGroup> Generate SQL dotnet ef migrations script --project src/Mg -o sql/X3.sql Add migration dotnet ef migrations add init --project src/Mg dotnet ef migrations add xyz --project src/Mg Remove migration dotnet ef migrations remove --project src/Mg Update or drop \u2b50\ufe0f dotnet ef database update --project src/Mg dotnet ef database drop --project src/Mg","title":"Database migration"},{"location":"dotnet/Enrich%20logging/","text":"serilog Enrich with MachineName Install package Serilog.Enrichers.Environment --version 2 .2.0-dev-00773 Update output template public static void Main ( string [] args ) { Log . Logger = new LoggerConfiguration () . MinimumLevel . Debug () . MinimumLevel . Override ( \"Microsoft\" , LogEventLevel . Information ) . MinimumLevel . Override ( \"Microsoft.AspNetCore\" , LogEventLevel . Warning ) . Enrich . FromLogContext () . Enrich . WithMachineName () . Enrich . WithEnvironmentName () . WriteTo . Console ( outputTemplate : \"{Timestamp:HH:mm:ss} [{MachineName}-{EnvironmentName} {Level:u3}] {Message:lj}{NewLine}{Exception}\" ) . CreateLogger (); CreateHostBuilder ( args ). Build (). Run (); } Output 16 :23:35 [ iMac-Development INF ] Now listening on: https://localhost:5001 16 :23:35 [ iMac-Development INF ] Now listening on: http://localhost:5000 16 :23:35 [ iMac-Development INF ] Application started. Press Ctrl+C to shut down. 16 :23:35 [ iMac-Development INF ] Hosting environment: Development 16 :23:35 [ iMac-Development INF ] Content root path: /Users/wk/Source/serilog/src/Env","title":"Enrich logging"},{"location":"dotnet/Enrich%20logging/#serilog","text":"","title":"serilog"},{"location":"dotnet/Enrich%20logging/#enrich-with-machinename","text":"Install package Serilog.Enrichers.Environment --version 2 .2.0-dev-00773 Update output template public static void Main ( string [] args ) { Log . Logger = new LoggerConfiguration () . MinimumLevel . Debug () . MinimumLevel . Override ( \"Microsoft\" , LogEventLevel . Information ) . MinimumLevel . Override ( \"Microsoft.AspNetCore\" , LogEventLevel . Warning ) . Enrich . FromLogContext () . Enrich . WithMachineName () . Enrich . WithEnvironmentName () . WriteTo . Console ( outputTemplate : \"{Timestamp:HH:mm:ss} [{MachineName}-{EnvironmentName} {Level:u3}] {Message:lj}{NewLine}{Exception}\" ) . CreateLogger (); CreateHostBuilder ( args ). Build (). Run (); } Output 16 :23:35 [ iMac-Development INF ] Now listening on: https://localhost:5001 16 :23:35 [ iMac-Development INF ] Now listening on: http://localhost:5000 16 :23:35 [ iMac-Development INF ] Application started. Press Ctrl+C to shut down. 16 :23:35 [ iMac-Development INF ] Hosting environment: Development 16 :23:35 [ iMac-Development INF ] Content root path: /Users/wk/Source/serilog/src/Env","title":"Enrich with MachineName"},{"location":"dotnet/GitHub%20Actions%20condition/","text":"Check commit message If no skip name : \"Build\" on : push : branches : - main paths-ignore : - '**/*.md' - '**/*.gitignore' - '**/*.gitattributes' workflow_dispatch : branches : - main paths-ignore : - '**/*.md' - '**/*.gitignore' - '**/*.gitattributes' jobs : build : if : github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false name : Build runs-on : ubuntu-latest env : DOTNET_CLI_TELEMETRY_OPTOUT : 1 DOTNET_SKIP_FIRST_TIME_EXPERIENCE : 1 DOTNET_NOLOGO : true DOTNET_GENERATE_ASPNET_CERTIFICATE : false DOTNET_ADD_GLOBAL_TOOLS_TO_PATH : false DOTNET_MULTILEVEL_LOOKUP : 0 steps : - uses : actions/checkout@v2 - name : Setup .NET Core SDK uses : actions/setup-dotnet@v1 with : dotnet-version : 3.1.x - name : Restore run : dotnet restore - name : Build run : dotnet build --configuration Release --no-restore - name : Test run : dotnet test","title":"GitHub Actions condition"},{"location":"dotnet/GitHub%20Actions%20condition/#check-commit-message","text":"If no skip name : \"Build\" on : push : branches : - main paths-ignore : - '**/*.md' - '**/*.gitignore' - '**/*.gitattributes' workflow_dispatch : branches : - main paths-ignore : - '**/*.md' - '**/*.gitignore' - '**/*.gitattributes' jobs : build : if : github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false name : Build runs-on : ubuntu-latest env : DOTNET_CLI_TELEMETRY_OPTOUT : 1 DOTNET_SKIP_FIRST_TIME_EXPERIENCE : 1 DOTNET_NOLOGO : true DOTNET_GENERATE_ASPNET_CERTIFICATE : false DOTNET_ADD_GLOBAL_TOOLS_TO_PATH : false DOTNET_MULTILEVEL_LOOKUP : 0 steps : - uses : actions/checkout@v2 - name : Setup .NET Core SDK uses : actions/setup-dotnet@v1 with : dotnet-version : 3.1.x - name : Restore run : dotnet restore - name : Build run : dotnet build --configuration Release --no-restore - name : Test run : dotnet test","title":"Check commit message"},{"location":"dotnet/Http%20client%20configuration/","text":"Preconfig base url and header static class ServiceExtensions { private static ServiceCollection AddCustomHttpClient ( this IServiceCollection services , AlfrescoOptions options ) { services . AddHttpClient (); void Config ( HttpClient options ) { var url = options . Url ; var user = options . User ; var password = optionsj . Password ; var base64 = Convert . ToBase64String ( Encoding . ASCII . GetBytes ( $\"{user}:{password}\" )); options . BaseAddress = new Uri ( url ); options . DefaultRequestHeaders . Authorization = new System . Net . Http . Headers . AuthenticationHeaderValue ( \"Basic\" , base64 ); } services . AddHttpClient ( \"alfresco-client\" ) . ConfigureHttpClient ( Config ) . ConfigurePrimaryHttpMessageHandler (() => { return new HttpClientHandler { ServerCertificateCustomValidationCallback = HttpClientHandler . DangerousAcceptAnyServerCertificateValidator }; }); return services ; } }","title":"Http client configuration"},{"location":"dotnet/Http%20client%20configuration/#preconfig-base-url-and-header","text":"static class ServiceExtensions { private static ServiceCollection AddCustomHttpClient ( this IServiceCollection services , AlfrescoOptions options ) { services . AddHttpClient (); void Config ( HttpClient options ) { var url = options . Url ; var user = options . User ; var password = optionsj . Password ; var base64 = Convert . ToBase64String ( Encoding . ASCII . GetBytes ( $\"{user}:{password}\" )); options . BaseAddress = new Uri ( url ); options . DefaultRequestHeaders . Authorization = new System . Net . Http . Headers . AuthenticationHeaderValue ( \"Basic\" , base64 ); } services . AddHttpClient ( \"alfresco-client\" ) . ConfigureHttpClient ( Config ) . ConfigurePrimaryHttpMessageHandler (() => { return new HttpClientHandler { ServerCertificateCustomValidationCallback = HttpClientHandler . DangerousAcceptAnyServerCertificateValidator }; }); return services ; } }","title":"Preconfig base url and header"},{"location":"dotnet/Immutable%20array/","text":"Do not initialize with new keyword class Program { static void X ( ImmutableArray < int > x ) { Console . WriteLine ( x . IsDefault ); // true Console . WriteLine ( x == null ); // true // error CS0037 // Console.WriteLine(x is null); } static void Main ( string [] args ) { ImmutableArray < int > x = new (); X ( x ); } }","title":"Immutable array"},{"location":"dotnet/Immutable%20array/#do-not-initialize-with-new-keyword","text":"class Program { static void X ( ImmutableArray < int > x ) { Console . WriteLine ( x . IsDefault ); // true Console . WriteLine ( x == null ); // true // error CS0037 // Console.WriteLine(x is null); } static void Main ( string [] args ) { ImmutableArray < int > x = new (); X ( x ); } }","title":"Do not initialize with new keyword"},{"location":"dotnet/Insert%20range%20with%20RepoDB/","text":"ropo-db Batch update # r \"nuget: RepoDb.MySQL\" # load \"ConnectionString.fsx\" MySqlBootstrap . Initialize () open MySql.Data.MySqlClient open RepoDb open RepoDb.Attributes open ConnectionString [< Map ( \"XUSER\" )>] type User = { UserName : string FirstName : string } let connection = new MySqlConnection ( Env . Hello ) let data = [| { UserName = \"u1\" ; FirstName = \"F1\" } { UserName = \"u2\" ; FirstName = \"F2\" } { UserName = \"u3\" ; FirstName = \"F3\" } |] let c = connection . UpdateAll ( data , batchSize = 100 ) printfn \"Commit = %i\" c","title":"Insert range with RepoDB"},{"location":"dotnet/Insert%20range%20with%20RepoDB/#ropo-db","text":"","title":"ropo-db"},{"location":"dotnet/Insert%20range%20with%20RepoDB/#batch-update","text":"# r \"nuget: RepoDb.MySQL\" # load \"ConnectionString.fsx\" MySqlBootstrap . Initialize () open MySql.Data.MySqlClient open RepoDb open RepoDb.Attributes open ConnectionString [< Map ( \"XUSER\" )>] type User = { UserName : string FirstName : string } let connection = new MySqlConnection ( Env . Hello ) let data = [| { UserName = \"u1\" ; FirstName = \"F1\" } { UserName = \"u2\" ; FirstName = \"F2\" } { UserName = \"u3\" ; FirstName = \"F3\" } |] let c = connection . UpdateAll ( data , batchSize = 100 ) printfn \"Commit = %i\" c","title":"Batch update"},{"location":"dotnet/Loading%20addition%20code%20pages/","text":"Register code pages # r \"nuget: System.Text.Encoding.CodePages\" open System.Text Encoding . RegisterProvider ( CodePagesEncodingProvider . Instance )","title":"Loading addition code pages"},{"location":"dotnet/Loading%20addition%20code%20pages/#register-code-pages","text":"# r \"nuget: System.Text.Encoding.CodePages\" open System.Text Encoding . RegisterProvider ( CodePagesEncodingProvider . Instance )","title":"Register  code pages"},{"location":"dotnet/Local%20constants/","text":"int Add100 ( int x ) { const int o = 100 ; return x + o ; }","title":"Local constants"},{"location":"dotnet/Local%20tool/","text":"Initialize Create config dotnet tool new-manifest Install tool dotnet install wk.IpAddress Use tool dotnet wk-ip-address","title":"Local tool"},{"location":"dotnet/Local%20tool/#initialize","text":"Create config dotnet tool new-manifest Install tool dotnet install wk.IpAddress Use tool dotnet wk-ip-address","title":"Initialize"},{"location":"dotnet/Log%20request%20path%20in%20ASP.NET/","text":"serilog Setup Program.cs public static void Main ( string [] args ) { Log . Logger = new LoggerConfiguration () . MinimumLevel . Debug () . MinimumLevel . Override ( \"Microsoft\" , LogEventLevel . Information ) . MinimumLevel . Override ( \"Microsoft.AspNetCore\" , LogEventLevel . Warning ) . Enrich . FromLogContext () . WriteTo . Console () . CreateLogger (); CreateHostBuilder ( args ). Build (). Run (); } Startup.cs app . UseSerilogRequestLogging (); Output [12:33:51 INF] Now listening on: https://localhost:5001 [12:33:51 INF] Now listening on: http://localhost:5000 [12:33:51 INF] Application started. Press Ctrl+C to shut down. [12:33:51 INF] Hosting environment: Development [12:33:51 INF] Content root path: /Users/wk/Source/serilog/src/Http [12:33:55 INF] HTTP POST /api/hello/updateMessage responded 200 in 81.5256 ms [12:34:01 INF] HTTP POST /api/hello/updateMessage responded 200 in 1.3437 ms [12:34:04 INF] HTTP POST /api/hello/updateMessage responded 200 in 0.9602 ms","title":"Log request path in ASP.NET"},{"location":"dotnet/Log%20request%20path%20in%20ASP.NET/#serilog","text":"","title":"serilog"},{"location":"dotnet/Log%20request%20path%20in%20ASP.NET/#setup","text":"Program.cs public static void Main ( string [] args ) { Log . Logger = new LoggerConfiguration () . MinimumLevel . Debug () . MinimumLevel . Override ( \"Microsoft\" , LogEventLevel . Information ) . MinimumLevel . Override ( \"Microsoft.AspNetCore\" , LogEventLevel . Warning ) . Enrich . FromLogContext () . WriteTo . Console () . CreateLogger (); CreateHostBuilder ( args ). Build (). Run (); } Startup.cs app . UseSerilogRequestLogging (); Output [12:33:51 INF] Now listening on: https://localhost:5001 [12:33:51 INF] Now listening on: http://localhost:5000 [12:33:51 INF] Application started. Press Ctrl+C to shut down. [12:33:51 INF] Hosting environment: Development [12:33:51 INF] Content root path: /Users/wk/Source/serilog/src/Http [12:33:55 INF] HTTP POST /api/hello/updateMessage responded 200 in 81.5256 ms [12:34:01 INF] HTTP POST /api/hello/updateMessage responded 200 in 1.3437 ms [12:34:04 INF] HTTP POST /api/hello/updateMessage responded 200 in 0.9602 ms","title":"Setup"},{"location":"dotnet/Logging%20factory/","text":"Install $ dotnet pacakge src/MyApp package Microsoft.Extensions.Logging.Console Logging factory var logging = LoggerFactory . Create ( builder => builder . AddConsole ()); var builder = new DbContextOptionsBuilder < MyDbContext >() . UseLoggerFactory ( logging ) . UseNpgsql ( \"Host=;User Id=;Password=;Databse=;\" );","title":"Logging factory"},{"location":"dotnet/Logging%20factory/#install","text":"$ dotnet pacakge src/MyApp package Microsoft.Extensions.Logging.Console","title":"Install"},{"location":"dotnet/Logging%20factory/#logging-factory","text":"var logging = LoggerFactory . Create ( builder => builder . AddConsole ()); var builder = new DbContextOptionsBuilder < MyDbContext >() . UseLoggerFactory ( logging ) . UseNpgsql ( \"Host=;User Id=;Password=;Databse=;\" );","title":"Logging factory"},{"location":"dotnet/MySQL%20connection%20string%20parser/","text":"mysql Install package dotnet add package MySql.Data Load connection string class Program { static void Main ( string [] args ) { var str = \"Port=3306;Host=localhost;User Id=alfresco;Password=password;Database=alfresco\" ; var x = new MySql . Data . MySqlClient . MySqlConnectionStringBuilder ( str ); Console . WriteLine ( $\"Database = {x.Database}\" ); Console . WriteLine ( $\"Server = {x.Server}\" ); Console . WriteLine ( $\"Port = {x.Port}\" ); Console . WriteLine ( $\"Password = {x.Password}\" ); Console . WriteLine ( $\"User = {x.UserID}\" ); } }","title":"MySQL connection string parser"},{"location":"dotnet/MySQL%20connection%20string%20parser/#mysql","text":"Install package dotnet add package MySql.Data Load connection string class Program { static void Main ( string [] args ) { var str = \"Port=3306;Host=localhost;User Id=alfresco;Password=password;Database=alfresco\" ; var x = new MySql . Data . MySqlClient . MySqlConnectionStringBuilder ( str ); Console . WriteLine ( $\"Database = {x.Database}\" ); Console . WriteLine ( $\"Server = {x.Server}\" ); Console . WriteLine ( $\"Port = {x.Port}\" ); Console . WriteLine ( $\"Password = {x.Password}\" ); Console . WriteLine ( $\"User = {x.UserID}\" ); } }","title":"mysql"},{"location":"dotnet/MySQL%20scaffolding/","text":"Create main project $ dotnet new webapi --output src/MyApp $ dotnet add src/MyWeb package Microsoft.EntityFrameworkCore.Design $ dotnet add src/MyWeb pacakge Microsoft.EntityFrameworkCore $ dotnet add src/MyWeb package Pomelo.EntityFrameworkCore.MySql Setup user secret $ dotnet user-secrets init --project src/MyWeb $ dotnet user-secrets list --project src/MyWeb $ cat ./secrets.json | dotnet user-secrets set --project src/MyWeb Generate models from DB $ dotnet ef dbcontext scaffold Name = ConectionStrings \\ Pomelo.EntityFrameworkCore.MySql \\ -o Models \\ -f \\ -c MyDbContext \\ -p src/MyWeb","title":"MySQL scaffolding"},{"location":"dotnet/MySQL%20scaffolding/#create-main-project","text":"$ dotnet new webapi --output src/MyApp $ dotnet add src/MyWeb package Microsoft.EntityFrameworkCore.Design $ dotnet add src/MyWeb pacakge Microsoft.EntityFrameworkCore $ dotnet add src/MyWeb package Pomelo.EntityFrameworkCore.MySql","title":"Create main project"},{"location":"dotnet/MySQL%20scaffolding/#setup-user-secret","text":"$ dotnet user-secrets init --project src/MyWeb $ dotnet user-secrets list --project src/MyWeb $ cat ./secrets.json | dotnet user-secrets set --project src/MyWeb","title":"Setup user secret"},{"location":"dotnet/MySQL%20scaffolding/#generate-models-from-db","text":"$ dotnet ef dbcontext scaffold Name = ConectionStrings \\ Pomelo.EntityFrameworkCore.MySql \\ -o Models \\ -f \\ -c MyDbContext \\ -p src/MyWeb","title":"Generate models from DB"},{"location":"dotnet/Null%20check/","text":"Null check with pattern matching class X { public int Value { set ; get ;} } var x = new X { Value = 1 }; if ( x is { Value : 1 }) { Console . WriteLine ( \"Yes\" ); } if ( x ?. Value == 1 ) { Console . WriteLine ( \"Yes\" ); } let yesNo = x swith { { Value : 1 } => \"Yes\" , _ => \"No_ };","title":"Null check"},{"location":"dotnet/Omnisharp%20options/","text":"csx omnisharp.json { \"FormattingOptions\" : { \"NewLinesForBracesInLambdaExpressionBody\" : false , \"NewLinesForBracesInAnonymousMethods\" : false , \"NewLinesForBracesInAnonymousTypes\" : false , \"NewLinesForBracesInControlBlocks\" : false , \"NewLinesForBracesInTypes\" : false , \"NewLinesForBracesInMethods\" : false , \"NewLinesForBracesInProperties\" : false , \"NewLinesForBracesInObjectCollectionArrayInitializers\" : false , \"NewLinesForBracesInAccessors\" : false , \"NewLineForElse\" : false , \"NewLineForCatch\" : false , \"NewLineForFinally\" : false }, \"script\" : { \"defaultTargetFramework\" : \"net5.0\" , \"enableScriptNuGetReferences\" : true } }","title":"Omnisharp options"},{"location":"dotnet/Omnisharp%20options/#csx","text":"omnisharp.json { \"FormattingOptions\" : { \"NewLinesForBracesInLambdaExpressionBody\" : false , \"NewLinesForBracesInAnonymousMethods\" : false , \"NewLinesForBracesInAnonymousTypes\" : false , \"NewLinesForBracesInControlBlocks\" : false , \"NewLinesForBracesInTypes\" : false , \"NewLinesForBracesInMethods\" : false , \"NewLinesForBracesInProperties\" : false , \"NewLinesForBracesInObjectCollectionArrayInitializers\" : false , \"NewLinesForBracesInAccessors\" : false , \"NewLineForElse\" : false , \"NewLineForCatch\" : false , \"NewLineForFinally\" : false }, \"script\" : { \"defaultTargetFramework\" : \"net5.0\" , \"enableScriptNuGetReferences\" : true } }","title":"csx"},{"location":"dotnet/Query%20with%20RepoDB/","text":"repodb #mysql Query with field operation # r \"nuget: RepoDb.MySQL\" open MySql.Data.MySqlClient open RepoDb open RepoDb.Attributes open RepoDb.Enumerations RepoDb . MySqlBootstrap . Initialize () [< Map ( \"OR_DX_BANK\" )>] type Bank = { Id : int Name : string } let connectionString = \"Host=;User=alfresco;Password=;Database=alfresco\" let connection = new MySqlConnection ( connectionString ) // let x = connection.Query<Bank>({| Id = 10 |}) let x = connection . Query < Bank >( QueryField ( \"Id\" , Operation . GreaterThan , 0 )) for item in x do printfn \"%i %s\" item . Id item . Name Query with LINQ # r \"nuget: RepoDb.MySQL\" # load \"ConnectionString.fsx\" open MySql.Data.MySqlClient open RepoDb open RepoDb.Attributes open RepoDb.Enumerations open ConnectionString open System.Linq RepoDb . MySqlBootstrap . Initialize () [< Map ( \"IDOC_EMPLOYEE_DATA\" )>] type Employee = { [< Map ( \"CODE\" )>] Code : int [< Map ( \"FNAME\" )>] FName : string [< Map ( \"LNAME\" )>] LName : string } let connection = new MySqlConnection ( Env . Uat ) let codes = [| 610001 610006 610019 610050 |] let x = connection . Query < Employee >( fun x -> codes . Contains ( x . Code )) for item in x do printfn \"%s %s\" item . FName item . LName","title":"Query with RepoDB"},{"location":"dotnet/Query%20with%20RepoDB/#repodb-mysql","text":"Query with field operation # r \"nuget: RepoDb.MySQL\" open MySql.Data.MySqlClient open RepoDb open RepoDb.Attributes open RepoDb.Enumerations RepoDb . MySqlBootstrap . Initialize () [< Map ( \"OR_DX_BANK\" )>] type Bank = { Id : int Name : string } let connectionString = \"Host=;User=alfresco;Password=;Database=alfresco\" let connection = new MySqlConnection ( connectionString ) // let x = connection.Query<Bank>({| Id = 10 |}) let x = connection . Query < Bank >( QueryField ( \"Id\" , Operation . GreaterThan , 0 )) for item in x do printfn \"%i %s\" item . Id item . Name Query with LINQ # r \"nuget: RepoDb.MySQL\" # load \"ConnectionString.fsx\" open MySql.Data.MySqlClient open RepoDb open RepoDb.Attributes open RepoDb.Enumerations open ConnectionString open System.Linq RepoDb . MySqlBootstrap . Initialize () [< Map ( \"IDOC_EMPLOYEE_DATA\" )>] type Employee = { [< Map ( \"CODE\" )>] Code : int [< Map ( \"FNAME\" )>] FName : string [< Map ( \"LNAME\" )>] LName : string } let connection = new MySqlConnection ( Env . Uat ) let codes = [| 610001 610006 610019 610050 |] let x = connection . Query < Employee >( fun x -> codes . Contains ( x . Code )) for item in x do printfn \"%s %s\" item . FName item . LName","title":"repodb  #mysql"},{"location":"dotnet/Query%20with%20json%20path/","text":"json Query array elements with Json Path # r \"nuget: Newtonsoft.Json\" open Newtonsoft.Json open Newtonsoft.Json.Linq let json = \"\"\" { \"data\": [ { \"content\": [ { \"id\": 719114 } ], \"field\": { \"id\": \"stationLayout\", \"name\": \"\u0e1c\u0e31\u0e07\u0e1a\u0e23\u0e34\u0e40\u0e27\u0e13\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 (\u0e23\u0e30\u0e1a\u0e38\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e23\u0e49\u0e32\u0e19)\" } }, { \"content\": [ { \"id\": 719118 } ], \"field\": { \"id\": \"gd2PDF\", \"name\": \"\u0e2d\u0e31\u0e1b\u0e42\u0e2b\u0e25\u0e14\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23\u0e2a\u0e31\u0e0d\u0e0d\u0e32\u0e40\u0e0a\u0e48\u0e32\u0e1e\u0e37\u0e49\u0e19\u0e17\u0e35\u0e48\u0e41\u0e25\u0e30\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e43\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 (PDF)\" } } ] } \"\"\" let obj = JObject . Parse ( json ) let token = obj . SelectTokens ( \"$.data[*].content[*].id\" ) for item in token do printfn \"Id = %s\" ( item . ToString () ) Output Id = 719114 Id = 719118","title":"Query with json path"},{"location":"dotnet/Query%20with%20json%20path/#json","text":"","title":"json"},{"location":"dotnet/Query%20with%20json%20path/#query-array-elements-with-json-path","text":"# r \"nuget: Newtonsoft.Json\" open Newtonsoft.Json open Newtonsoft.Json.Linq let json = \"\"\" { \"data\": [ { \"content\": [ { \"id\": 719114 } ], \"field\": { \"id\": \"stationLayout\", \"name\": \"\u0e1c\u0e31\u0e07\u0e1a\u0e23\u0e34\u0e40\u0e27\u0e13\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 (\u0e23\u0e30\u0e1a\u0e38\u0e15\u0e33\u0e41\u0e2b\u0e19\u0e48\u0e07\u0e23\u0e49\u0e32\u0e19)\" } }, { \"content\": [ { \"id\": 719118 } ], \"field\": { \"id\": \"gd2PDF\", \"name\": \"\u0e2d\u0e31\u0e1b\u0e42\u0e2b\u0e25\u0e14\u0e40\u0e2d\u0e01\u0e2a\u0e32\u0e23\u0e2a\u0e31\u0e0d\u0e0d\u0e32\u0e40\u0e0a\u0e48\u0e32\u0e1e\u0e37\u0e49\u0e19\u0e17\u0e35\u0e48\u0e41\u0e25\u0e30\u0e2d\u0e32\u0e04\u0e32\u0e23\u0e43\u0e19\u0e2a\u0e16\u0e32\u0e19\u0e35\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23 (PDF)\" } } ] } \"\"\" let obj = JObject . Parse ( json ) let token = obj . SelectTokens ( \"$.data[*].content[*].id\" ) for item in token do printfn \"Id = %s\" ( item . ToString () ) Output Id = 719114 Id = 719118","title":"Query array elements with Json Path"},{"location":"dotnet/Range%20helper/","text":"RangeHelper.cs foreach ( var i in 10. . 3 ) { Console . WriteLine ( i ); } public static class RangeHelper { public static IEnumerator < int > GetEnumerator ( this Range range ) { var inc = range . Start . Value < range . End . Value ? 1 : - 1 ; bool Test ( int i ) => inc switch { >= 0 => i < range . End . Value , < 0 => i > range . End . Value }; for ( int i = range . Start . Value ; Test ( i ); i += inc ) yield return i ; } }","title":"Range helper"},{"location":"dotnet/Re-throw%20with%20stack%20trace/","text":"ExceptionDispatchInfo static void Error () { var list = new List < Exception >(); try { var k = 0 ; var x = 100 / k ; } catch ( Exception ex ) { list . Add ( ex ); } if ( list . Any ()) { ExceptionDispatchInfo . Capture ( list [ 0 ]). Throw (); } }","title":"Re throw with stack trace"},{"location":"dotnet/Re-throw%20with%20stack%20trace/#exceptiondispatchinfo","text":"static void Error () { var list = new List < Exception >(); try { var k = 0 ; var x = 100 / k ; } catch ( Exception ex ) { list . Add ( ex ); } if ( list . Any ()) { ExceptionDispatchInfo . Capture ( list [ 0 ]). Throw (); } }","title":"ExceptionDispatchInfo"},{"location":"dotnet/Read%20input%20pipe/","text":"\u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e48\u0e32\u0e19 Pipe (|) Input.txt Line1 Line2 Program.fsx let builder = StringBuilder () let mutable line = Console . ReadLine () while not ( isNull line ) do builder . AppendLine ( line ) |> ignore line <- Console . ReadLine () let pipe = builder . ToString () printfn \"%s\" pipe Test cat Input.txt | dotnet fsi Progrem.fsx Output Line1 Line2","title":"Read input pipe"},{"location":"dotnet/Read%20input%20pipe/#pipe","text":"Input.txt Line1 Line2 Program.fsx let builder = StringBuilder () let mutable line = Console . ReadLine () while not ( isNull line ) do builder . AppendLine ( line ) |> ignore line <- Console . ReadLine () let pipe = builder . ToString () printfn \"%s\" pipe Test cat Input.txt | dotnet fsi Progrem.fsx Output Line1 Line2","title":"\u0e2d\u0e48\u0e32\u0e19\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e1c\u0e48\u0e32\u0e19 Pipe (|)"},{"location":"dotnet/Refit/","text":"refit Create API [Route(\"api/student\")] [ApiController] public class StudentController : ControllerBase { public record Student ( int Id , string Name ); [HttpGet(\"get-students\")] public List < Student > GetStudents () { return new List < Student > { new Student ( 1 , \"wk\" ), new Student ( 1 , \"jw\" ), }; } } Consume API Install package dotnet add src/MyApp package Refit.HttpClientFactory dotnet add src/MyApp package Microsoft.Extensions.DependencyInject Define API interface var collection = new ServiceCollection (); collection . AddRefitClient < IStudentClient >() . ConfigureHttpClient ( c => c . BaseAddress = new Uri ( \"http://localhost:5126\" )); var service = collection . BuildServiceProvider (); var studentClient = service . GetService < IStudentClient >()!; var students = await studentClient . GetStudents ()!; foreach ( var item in students . Content ) { Console . WriteLine ( $\"Student (Name={item.Name}, Id={item.Id})\" ); } class Student { public string Name { set ; get ; } = string . Empty ; public int Id { set ; get ; } } interface IStudentClient { [Get(\"/api/student/get-students\")] public Task < ApiResponse < List < Student >>> GetStudents (); }","title":"Refit"},{"location":"dotnet/Refit/#refit","text":"","title":"refit"},{"location":"dotnet/Refit/#create-api","text":"[Route(\"api/student\")] [ApiController] public class StudentController : ControllerBase { public record Student ( int Id , string Name ); [HttpGet(\"get-students\")] public List < Student > GetStudents () { return new List < Student > { new Student ( 1 , \"wk\" ), new Student ( 1 , \"jw\" ), }; } }","title":"Create API"},{"location":"dotnet/Refit/#consume-api","text":"Install package dotnet add src/MyApp package Refit.HttpClientFactory dotnet add src/MyApp package Microsoft.Extensions.DependencyInject Define API interface var collection = new ServiceCollection (); collection . AddRefitClient < IStudentClient >() . ConfigureHttpClient ( c => c . BaseAddress = new Uri ( \"http://localhost:5126\" )); var service = collection . BuildServiceProvider (); var studentClient = service . GetService < IStudentClient >()!; var students = await studentClient . GetStudents ()!; foreach ( var item in students . Content ) { Console . WriteLine ( $\"Student (Name={item.Name}, Id={item.Id})\" ); } class Student { public string Name { set ; get ; } = string . Empty ; public int Id { set ; get ; } } interface IStudentClient { [Get(\"/api/student/get-students\")] public Task < ApiResponse < List < Student >>> GetStudents (); }","title":"Consume API"},{"location":"dotnet/Secrets%20connection%20string/","text":"Move connection to user secrets Initliaze dotnet user-secrets init --project src/RetensionSchedule Create secrets file secrets.json { \"ConnectionString\" : \"xyz\" } Install secrets into user profile cat ./secrets.json | dotnet user-secrets set --project src/RetensionSchedule List installed secrets dotnet user-secrets list --project src/RetensionSchedule Load user secrets into app's configuration builder . Configuration . AddJsonFile ( \"_app_/appsettings.json\" , optional : false , reloadOnChange : true ) . AddUserSecrets < Program >() // Load user's secrets . AddEnvironmentVariables ();","title":"Secrets connection string"},{"location":"dotnet/Secrets%20connection%20string/#move-connection-to-user-secrets","text":"Initliaze dotnet user-secrets init --project src/RetensionSchedule Create secrets file secrets.json { \"ConnectionString\" : \"xyz\" } Install secrets into user profile cat ./secrets.json | dotnet user-secrets set --project src/RetensionSchedule List installed secrets dotnet user-secrets list --project src/RetensionSchedule Load user secrets into app's configuration builder . Configuration . AddJsonFile ( \"_app_/appsettings.json\" , optional : false , reloadOnChange : true ) . AddUserSecrets < Program >() // Load user's secrets . AddEnvironmentVariables ();","title":"Move connection to user secrets"},{"location":"dotnet/Serilog%20filter%20sub-logger/","text":"serilog Config public static void Main ( string [] args ) { Log . Logger = new LoggerConfiguration () . MinimumLevel . Debug () . MinimumLevel . Override ( \"Microsoft\" , LogEventLevel . Information ) . MinimumLevel . Override ( \"Microsoft.AspNetCore\" , LogEventLevel . Warning ) . Enrich . FromLogContext () . WriteTo . Logger ( c => c . WriteTo . Console () . Filter . ByExcluding ( \"TypeName = 'Startup'\" ) ) . WriteTo . File ( \"log.txt\" ) . CreateLogger (); CreateHostBuilder ( args ). Build (). Run (); } Usage var world = new { Hello = \"World\" }; var moon = new { Hello = \"Moon\" }; var startup = Log . ForContext ( \"TypeName\" , \"Startup\" ); startup . Information ( \"Hello = {@World}\" , world ); startup . Information ( \"Hello = {@Moon}\" , moon );","title":"Serilog filter sub logger"},{"location":"dotnet/Serilog%20filter%20sub-logger/#serilog","text":"Config public static void Main ( string [] args ) { Log . Logger = new LoggerConfiguration () . MinimumLevel . Debug () . MinimumLevel . Override ( \"Microsoft\" , LogEventLevel . Information ) . MinimumLevel . Override ( \"Microsoft.AspNetCore\" , LogEventLevel . Warning ) . Enrich . FromLogContext () . WriteTo . Logger ( c => c . WriteTo . Console () . Filter . ByExcluding ( \"TypeName = 'Startup'\" ) ) . WriteTo . File ( \"log.txt\" ) . CreateLogger (); CreateHostBuilder ( args ). Build (). Run (); } Usage var world = new { Hello = \"World\" }; var moon = new { Hello = \"Moon\" }; var startup = Log . ForContext ( \"TypeName\" , \"Startup\" ); startup . Information ( \"Hello = {@World}\" , world ); startup . Information ( \"Hello = {@Moon}\" , moon );","title":"serilog"},{"location":"dotnet/Show%20MySQL%20create%20statement/","text":"RepoDB # r \"nuget: RepoDb.MySQL\" # r \"nuget: wk.DynamicTables\" # load \"ConnectionString.fsx\" open MySql.Data.MySqlClient open RepoDb open RepoDb.Attributes open System.Linq type Create = { Table : string [< Map ( \"Create Table\" )>] CreateTable : string } RepoDb . MySqlBootstrap . Initialize () let showCreate ( db : string , table : string ) = let connection = new MySqlConnection ( ConnectionString . MyConnection ) let output = let cmd = $ \"show create table {db}.{table}\" connection . ExecuteQuery < Create >( cmd ). First () printfn \"%s\" output . CreateTable showCreate ( \"alfresco\" , \"alf_child_assoc\" ) Output CREATE TABLE ` alf_child_assoc ` ( ` id ` bigint ( 20 ) NOT NULL AUTO_INCREMENT , ` version ` bigint ( 20 ) NOT NULL , ` parent_node_id ` bigint ( 20 ) NOT NULL , ` type_qname_id ` bigint ( 20 ) NOT NULL , ` child_node_name_crc ` bigint ( 20 ) NOT NULL , ` child_node_name ` varchar ( 50 ) NOT NULL , ` child_node_id ` bigint ( 20 ) NOT NULL , ` qname_ns_id ` bigint ( 20 ) NOT NULL , ` qname_localname ` varchar ( 255 ) NOT NULL , ` qname_crc ` bigint ( 20 ) NOT NULL , ` is_primary ` bit ( 1 ) DEFAULT NULL , ` assoc_index ` int ( 11 ) DEFAULT NULL , PRIMARY KEY ( ` id ` ), UNIQUE KEY ` parent_node_id ` ( ` parent_node_id ` , ` type_qname_id ` , ` child_node_name_crc ` , ` child_node_name ` ), KEY ` idx_alf_cass_pnode ` ( ` parent_node_id ` , ` assoc_index ` , ` id ` ), KEY ` fk_alf_cass_cnode ` ( ` child_node_id ` ), KEY ` fk_alf_cass_tqn ` ( ` type_qname_id ` ), KEY ` fk_alf_cass_qnns ` ( ` qname_ns_id ` ), KEY ` idx_alf_cass_qncrc ` ( ` qname_crc ` , ` type_qname_id ` , ` parent_node_id ` ), KEY ` idx_alf_cass_pri ` ( ` parent_node_id ` , ` is_primary ` , ` child_node_id ` ), CONSTRAINT ` fk_alf_cass_cnode ` FOREIGN KEY ( ` child_node_id ` ) REFERENCES ` alf_node ` ( ` id ` ), CONSTRAINT ` fk_alf_cass_pnode ` FOREIGN KEY ( ` parent_node_id ` ) REFERENCES ` alf_node ` ( ` id ` ), CONSTRAINT ` fk_alf_cass_qnns ` FOREIGN KEY ( ` qname_ns_id ` ) REFERENCES ` alf_namespace ` ( ` id ` ), CONSTRAINT ` fk_alf_cass_tqn ` FOREIGN KEY ( ` type_qname_id ` ) REFERENCES ` alf_qname ` ( ` id ` ) ) ENGINE = InnoDB AUTO_INCREMENT = 70955 DEFAULT CHARSET = utf8","title":"Show MySQL create statement"},{"location":"dotnet/Show%20MySQL%20create%20statement/#repodb","text":"# r \"nuget: RepoDb.MySQL\" # r \"nuget: wk.DynamicTables\" # load \"ConnectionString.fsx\" open MySql.Data.MySqlClient open RepoDb open RepoDb.Attributes open System.Linq type Create = { Table : string [< Map ( \"Create Table\" )>] CreateTable : string } RepoDb . MySqlBootstrap . Initialize () let showCreate ( db : string , table : string ) = let connection = new MySqlConnection ( ConnectionString . MyConnection ) let output = let cmd = $ \"show create table {db}.{table}\" connection . ExecuteQuery < Create >( cmd ). First () printfn \"%s\" output . CreateTable showCreate ( \"alfresco\" , \"alf_child_assoc\" ) Output CREATE TABLE ` alf_child_assoc ` ( ` id ` bigint ( 20 ) NOT NULL AUTO_INCREMENT , ` version ` bigint ( 20 ) NOT NULL , ` parent_node_id ` bigint ( 20 ) NOT NULL , ` type_qname_id ` bigint ( 20 ) NOT NULL , ` child_node_name_crc ` bigint ( 20 ) NOT NULL , ` child_node_name ` varchar ( 50 ) NOT NULL , ` child_node_id ` bigint ( 20 ) NOT NULL , ` qname_ns_id ` bigint ( 20 ) NOT NULL , ` qname_localname ` varchar ( 255 ) NOT NULL , ` qname_crc ` bigint ( 20 ) NOT NULL , ` is_primary ` bit ( 1 ) DEFAULT NULL , ` assoc_index ` int ( 11 ) DEFAULT NULL , PRIMARY KEY ( ` id ` ), UNIQUE KEY ` parent_node_id ` ( ` parent_node_id ` , ` type_qname_id ` , ` child_node_name_crc ` , ` child_node_name ` ), KEY ` idx_alf_cass_pnode ` ( ` parent_node_id ` , ` assoc_index ` , ` id ` ), KEY ` fk_alf_cass_cnode ` ( ` child_node_id ` ), KEY ` fk_alf_cass_tqn ` ( ` type_qname_id ` ), KEY ` fk_alf_cass_qnns ` ( ` qname_ns_id ` ), KEY ` idx_alf_cass_qncrc ` ( ` qname_crc ` , ` type_qname_id ` , ` parent_node_id ` ), KEY ` idx_alf_cass_pri ` ( ` parent_node_id ` , ` is_primary ` , ` child_node_id ` ), CONSTRAINT ` fk_alf_cass_cnode ` FOREIGN KEY ( ` child_node_id ` ) REFERENCES ` alf_node ` ( ` id ` ), CONSTRAINT ` fk_alf_cass_pnode ` FOREIGN KEY ( ` parent_node_id ` ) REFERENCES ` alf_node ` ( ` id ` ), CONSTRAINT ` fk_alf_cass_qnns ` FOREIGN KEY ( ` qname_ns_id ` ) REFERENCES ` alf_namespace ` ( ` id ` ), CONSTRAINT ` fk_alf_cass_tqn ` FOREIGN KEY ( ` type_qname_id ` ) REFERENCES ` alf_qname ` ( ` id ` ) ) ENGINE = InnoDB AUTO_INCREMENT = 70955 DEFAULT CHARSET = utf8","title":"RepoDB"},{"location":"dotnet/String%20split%20options/","text":"Options open System open type System . StringSplitOptions let input = \"a [stop] b [stop] c [stop]\" let split ( spliter : string ) o = let x = input . Split ( spliter , o ) printfn \"%A\" x split \"[stop]\" StringSplitOptions . None split \"[stop]\" StringSplitOptions . RemoveEmptyEntries split \"[stop]\" StringSplitOptions . TrimEntries split \"[stop]\" ( TrimEntries ||| RemoveEmptyEntries )","title":"String split options"},{"location":"dotnet/Strong%20box/","text":"Instead of doing this object value = 100 ; int i = ( int ) value Use StrongBox var box = new StringBox ( 100 ); int value = box . Value ; Reference https://github.com/dotnet/runtime/discussions/47774","title":"Strong box"},{"location":"dotnet/Strong%20box/#instead-of-doing-this","text":"object value = 100 ; int i = ( int ) value","title":"Instead of doing this"},{"location":"dotnet/Strong%20box/#use-strongbox","text":"var box = new StringBox ( 100 ); int value = box . Value ; Reference https://github.com/dotnet/runtime/discussions/47774","title":"Use StrongBox"},{"location":"dotnet/Use%20web%20API%20analyzers/","text":"Enable analyzers <PropertyGroup> <IncludeOpenAPIAnalyzers> true </IncludeOpenAPIAnalyzers> </PropertyGroup> https://docs.microsoft.com/en-us/aspnet/core/web-api/advanced/analyzers","title":"Use web API analyzers"},{"location":"dotnet/Use%20web%20API%20analyzers/#enable-analyzers","text":"<PropertyGroup> <IncludeOpenAPIAnalyzers> true </IncludeOpenAPIAnalyzers> </PropertyGroup> https://docs.microsoft.com/en-us/aspnet/core/web-api/advanced/analyzers","title":"Enable analyzers"},{"location":"dotnet/Write%20warning%20log%20to%20Sentry/","text":"sentry #serilog Install package dotnet add package Sentry.Serilog Create logger Log . Logger = new LoggerConfiguration () . MinimumLevel . Debug () . MinimumLevel . Override ( \"Microsoft\" , LogEventLevel . Information ) . Enrich . FromLogContext () . WriteTo . Console () . WriteTo . File ( \"logs/log-.txt\" , rollingInterval : RollingInterval . Day ) . WriteTo . Sentry ( opt => { opt . Dsn = \"https://xyz.ingest.sentry.io/5544660\" ; opt . SendDefaultPii = true ; opt . MinimumBreadcrumbLevel = LogEventLevel . Debug ; opt . MinimumEventLevel = LogEventLevel . Warning ; opt . Environment = System . Environment . GetEnvironmentVariable ( \"ASPNETCORE_ENVIRONMENT\" ); }) . CreateLogger ();","title":"Write warning log to Sentry"},{"location":"dotnet/Write%20warning%20log%20to%20Sentry/#sentry-serilog","text":"Install package dotnet add package Sentry.Serilog Create logger Log . Logger = new LoggerConfiguration () . MinimumLevel . Debug () . MinimumLevel . Override ( \"Microsoft\" , LogEventLevel . Information ) . Enrich . FromLogContext () . WriteTo . Console () . WriteTo . File ( \"logs/log-.txt\" , rollingInterval : RollingInterval . Day ) . WriteTo . Sentry ( opt => { opt . Dsn = \"https://xyz.ingest.sentry.io/5544660\" ; opt . SendDefaultPii = true ; opt . MinimumBreadcrumbLevel = LogEventLevel . Debug ; opt . MinimumEventLevel = LogEventLevel . Warning ; opt . Environment = System . Environment . GetEnvironmentVariable ( \"ASPNETCORE_ENVIRONMENT\" ); }) . CreateLogger ();","title":"sentry #serilog"},{"location":"git/GitLens/","text":"","title":"GitLens"},{"location":"javascript/Disable%20cache/","text":"What is cache busting? \u00b7 Curtis Timson (curtiscode.dev)","title":"Disable cache"},{"location":"javascript/Remove%20duplicate/","text":"Set let x = { value : [ { CustNumber : \"000009H521\" }, { CustNumber : \"000009H521\" } ] } let u = Array . from ( new Set ( x . value . map ( x => x . CustNumber ))) console . log ( u )","title":"Remove duplicate"},{"location":"vim/Delete/","text":"Command dw Delete word under the cursor dd Delete current line D Delete all after cursor d^ Delete all before curor Playground s","title":"Delete"},{"location":"vim/Delete/#command","text":"dw Delete word under the cursor dd Delete current line D Delete all after cursor d^ Delete all before curor","title":"Command"},{"location":"vim/Delete/#playground","text":"s","title":"Playground"},{"location":"vim/Repeat/","text":"Command . Playground var + agrument + + agrument +","title":"Repeat"},{"location":"vim/Repeat/#command","text":".","title":"Command"},{"location":"vim/Repeat/#playground","text":"var + agrument + + agrument +","title":"Playground"},{"location":"vim/Select/","text":"Command vit Select in tag Playground xyz","title":"Select"},{"location":"vim/Select/#command","text":"vit Select in tag","title":"Command"},{"location":"vim/Select/#playground","text":"xyz","title":"Playground"},{"location":"vim/Switch%20case/","text":"Command Process ` Select text then process ` Playground abcdef abdef","title":"Switch case"},{"location":"vim/Switch%20case/#command","text":"Process ` Select text then process `","title":"Command"},{"location":"vim/Switch%20case/#playground","text":"abcdef abdef","title":"Playground"}]}